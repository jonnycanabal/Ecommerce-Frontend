{"ast":null,"code":"import { BASE_ENDPOINT2 } from '../config/app';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TiendaService {\n  constructor(http) {\n    this.http = http;\n    this.baseEndPoint = BASE_ENDPOINT2;\n    this.cabeceras = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n  }\n  listar() {\n    return this.http.get(this.baseEndPoint);\n  }\n  ver(id) {\n    return this.http.get(`${this.baseEndPoint}/ver/${id}`);\n  }\n  crear(tienda) {\n    const url = 'this.baseEndPoint' + \"/crear\";\n    return this.http.post(url, tienda, {\n      headers: this.cabeceras\n    });\n  }\n  editar(tienda) {\n    const url = this.baseEndPoint + \"/editar\" + tienda.id;\n    return this.http.put(url, tienda, {\n      headers: this.cabeceras\n    });\n  }\n  eliminar(id) {\n    const url = this.baseEndPoint + \"/eliminar/\" + id;\n    return this.http.delete(url);\n  }\n  crearConFoto(tienda, archivo) {\n    const formData = new FormData();\n    formData.append('archivo', archivo);\n    formData.append('nombre', tienda.nombre);\n    return this.http.post(this.baseEndPoint + \"/crear-con-foto\", formData);\n  }\n  editarConFoto(tienda, archivo) {\n    const formData = new FormData();\n    formData.append('archivo', archivo);\n    formData.append('nombre', tienda.nombre);\n    return this.http.put(this.baseEndPoint + \"/editar-con-foto\" + tienda.id, formData);\n  }\n  static #_ = this.ɵfac = function TiendaService_Factory(t) {\n    return new (t || TiendaService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TiendaService,\n    factory: TiendaService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BASE_ENDPOINT2","HttpHeaders","TiendaService","constructor","http","baseEndPoint","cabeceras","listar","get","ver","id","crear","tienda","url","post","headers","editar","put","eliminar","delete","crearConFoto","archivo","formData","FormData","append","nombre","editarConFoto","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\mao_9\\Documents\\Cursos\\Practica\\AplicativoEcommerce\\AplicativoEcommerce\\src\\app\\services\\tienda.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BASE_ENDPOINT2 } from '../config/app';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Tienda } from '../models/tienda';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TiendaService {\n\n  private baseEndPoint = BASE_ENDPOINT2\n\n  private cabeceras: HttpHeaders = new HttpHeaders({'Content-Type': 'application/json'})\n\n  constructor(private http: HttpClient) { }\n\n  public listar(): Observable<Tienda[]>{\n    return this.http.get<Tienda[]>(this.baseEndPoint);\n  }\n\n  public ver (id: number): Observable<Tienda>{\n    return this.http.get<Tienda>(`${this.baseEndPoint}/ver/${id}`)\n  }\n\n  public crear (tienda: Tienda): Observable<Tienda>{\n    const url = 'this.baseEndPoint' + \"/crear\";\n    return this.http.post<Tienda>(url, tienda, {headers: this.cabeceras});\n  }\n\n  public editar (tienda: Tienda): Observable<Tienda>{\n    const url = this.baseEndPoint + \"/editar\" + tienda.id;\n    return this.http.put<Tienda>(url, tienda, {headers: this.cabeceras});\n  }\n\n  public eliminar (id: number): Observable<void>{\n    const url = this.baseEndPoint + \"/eliminar/\" + id;\n    return this.http.delete<void>(url);\n  }\n\n  public crearConFoto(tienda: Tienda, archivo: File): Observable<Tienda>{\n    const formData = new FormData();\n    formData.append('archivo', archivo);\n    formData.append('nombre', tienda.nombre)\n\n    return this.http.post<Tienda>(this.baseEndPoint + \"/crear-con-foto\", formData);\n  }\n\n  public editarConFoto(tienda: Tienda, archivo: File): Observable<Tienda>{\n    const formData = new FormData();\n    formData.append('archivo', archivo);\n    formData.append('nombre', tienda.nombre);\n\n    return this.http.put<Tienda>(this.baseEndPoint + \"/editar-con-foto\" + tienda.id, formData);\n  }\n}\n"],"mappings":"AACA,SAASA,cAAc,QAAQ,eAAe;AAC9C,SAAqBC,WAAW,QAAQ,sBAAsB;;;AAO9D,OAAM,MAAOC,aAAa;EAMxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJhB,KAAAC,YAAY,GAAGL,cAAc;IAE7B,KAAAM,SAAS,GAAgB,IAAIL,WAAW,CAAC;MAAC,cAAc,EAAE;IAAkB,CAAC,CAAC;EAE9C;EAEjCM,MAAMA,CAAA;IACX,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAW,IAAI,CAACH,YAAY,CAAC;EACnD;EAEOI,GAAGA,CAAEC,EAAU;IACpB,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAS,GAAG,IAAI,CAACH,YAAY,QAAQK,EAAE,EAAE,CAAC;EAChE;EAEOC,KAAKA,CAAEC,MAAc;IAC1B,MAAMC,GAAG,GAAG,mBAAmB,GAAG,QAAQ;IAC1C,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAASD,GAAG,EAAED,MAAM,EAAE;MAACG,OAAO,EAAE,IAAI,CAACT;IAAS,CAAC,CAAC;EACvE;EAEOU,MAAMA,CAAEJ,MAAc;IAC3B,MAAMC,GAAG,GAAG,IAAI,CAACR,YAAY,GAAG,SAAS,GAAGO,MAAM,CAACF,EAAE;IACrD,OAAO,IAAI,CAACN,IAAI,CAACa,GAAG,CAASJ,GAAG,EAAED,MAAM,EAAE;MAACG,OAAO,EAAE,IAAI,CAACT;IAAS,CAAC,CAAC;EACtE;EAEOY,QAAQA,CAAER,EAAU;IACzB,MAAMG,GAAG,GAAG,IAAI,CAACR,YAAY,GAAG,YAAY,GAAGK,EAAE;IACjD,OAAO,IAAI,CAACN,IAAI,CAACe,MAAM,CAAON,GAAG,CAAC;EACpC;EAEOO,YAAYA,CAACR,MAAc,EAAES,OAAa;IAC/C,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEH,OAAO,CAAC;IACnCC,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEZ,MAAM,CAACa,MAAM,CAAC;IAExC,OAAO,IAAI,CAACrB,IAAI,CAACU,IAAI,CAAS,IAAI,CAACT,YAAY,GAAG,iBAAiB,EAAEiB,QAAQ,CAAC;EAChF;EAEOI,aAAaA,CAACd,MAAc,EAAES,OAAa;IAChD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEH,OAAO,CAAC;IACnCC,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEZ,MAAM,CAACa,MAAM,CAAC;IAExC,OAAO,IAAI,CAACrB,IAAI,CAACa,GAAG,CAAS,IAAI,CAACZ,YAAY,GAAG,kBAAkB,GAAGO,MAAM,CAACF,EAAE,EAAEY,QAAQ,CAAC;EAC5F;EAAC,QAAAK,CAAA,G;qBA7CUzB,aAAa,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAb9B,aAAa;IAAA+B,OAAA,EAAb/B,aAAa,CAAAgC,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}