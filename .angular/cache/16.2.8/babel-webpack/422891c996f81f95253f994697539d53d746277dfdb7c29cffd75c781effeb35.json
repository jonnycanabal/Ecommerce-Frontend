{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Producto } from 'src/app/models/producto';\nimport { HttpHeaders } from '@angular/common/http';\nexport let ProductoFormComponent = class ProductoFormComponent {\n  //importar el service en el contructor\n  //Clase u objeto de angular que se llama Router, se debe inyectar  para despues utilizarlo en el metodo por medio del navigate\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.titulo = \"Ingresar Producto\";\n    this.producto = new Producto(); //atributo producto\n  }\n\n  crear() {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    const nuevoProducto = {\n      nombre: this.producto.nombre,\n      marca: this.producto.marca,\n      precio: this.producto.precio\n    };\n    this.http.post('http://localhost:4200/producto/form', nuevoProducto, httpOptions).subscribe(producto => {\n      console.log(producto);\n      alert(`Producto ${producto.nombre} creado con éxito`);\n      this.router.navigate(['/productos']);\n    });\n    /**\n        public crear(): void {\n          this.service.crear(this.producto).subscribe(producto => {\n            console.log(producto);\n            alert(`Alumno ${producto.nombre} creado con exito`);\n            this.router.navigate(['/productos']);\n          });\n        }\n    */\n  }\n};\n\nProductoFormComponent = __decorate([Component({\n  selector: 'app-producto-form',\n  templateUrl: './producto-form.component.html',\n  styleUrls: ['./producto-form.component.css']\n})], ProductoFormComponent);","map":{"version":3,"names":["Component","Producto","HttpHeaders","ProductoFormComponent","constructor","http","router","titulo","producto","crear","httpOptions","headers","nuevoProducto","nombre","marca","precio","post","subscribe","console","log","alert","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\mao_9\\Documents\\Cursos\\Practica\\AplicativoEcommerce\\AplicativoEcommerce\\src\\app\\components\\productos\\producto-form.component.ts"],"sourcesContent":["  import { Component } from '@angular/core';\n  import { Router } from '@angular/router';\n  import { Producto } from 'src/app/models/producto';\n  import { ProductoService } from 'src/app/services/producto.service';\n\n  import { HttpHeaders } from '@angular/common/http';\n  \n\n  @Component({\n    selector: 'app-producto-form',\n    templateUrl: './producto-form.component.html',\n    styleUrls: ['./producto-form.component.css']\n  })\n\n  export class ProductoFormComponent {\n\n    titulo = \"Ingresar Producto\";\n\n    producto: Producto = new Producto(); //atributo producto\n\n    //importar el service en el contructor\n    //Clase u objeto de angular que se llama Router, se debe inyectar  para despues utilizarlo en el metodo por medio del navigate\n    constructor(private private http: HttpClient, private router: Router) {\n\n    }\n\n    public crear(): void{\n      const httpOptions ={\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    \n\n    const nuevoProducto = {\n      nombre: this.producto.nombre,\n      marca: this.producto.marca,\n      precio: this.producto.precio\n    }\n\n    this.http.post('http://localhost:4200/producto/form', nuevoProducto, httpOptions).subscribe(\n      (producto) =>{\n        console.log(producto);\n        alert(`Producto ${producto.nombre} creado con éxito`);\n        this.router.navigate(['/productos'])\n      }\n    );\n/** \n    public crear(): void {\n      this.service.crear(this.producto).subscribe(producto => {\n        console.log(producto);\n        alert(`Alumno ${producto.nombre} creado con exito`);\n        this.router.navigate(['/productos']);\n      });\n    }\n*/\n  }\n}\n"],"mappings":";AAAE,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAASC,QAAQ,QAAQ,yBAAyB;AAGlD,SAASC,WAAW,QAAQ,sBAAsB;AAS3C,WAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAMhC;EACA;EACAC,YAA4BC,IAAgB,EAAUC,MAAc;IAAxC,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAN5D,KAAAC,MAAM,GAAG,mBAAmB;IAE5B,KAAAC,QAAQ,GAAa,IAAIP,QAAQ,EAAE,CAAC,CAAC;EAMrC;;EAEOQ,KAAKA,CAAA;IACV,MAAMC,WAAW,GAAE;MACjBC,OAAO,EAAE,IAAIT,WAAW,CAAC;QACvB,cAAc,EAAE;OACjB;KACF;IAGH,MAAMU,aAAa,GAAG;MACpBC,MAAM,EAAE,IAAI,CAACL,QAAQ,CAACK,MAAM;MAC5BC,KAAK,EAAE,IAAI,CAACN,QAAQ,CAACM,KAAK;MAC1BC,MAAM,EAAE,IAAI,CAACP,QAAQ,CAACO;KACvB;IAED,IAAI,CAACV,IAAI,CAACW,IAAI,CAAC,qCAAqC,EAAEJ,aAAa,EAAEF,WAAW,CAAC,CAACO,SAAS,CACxFT,QAAQ,IAAI;MACXU,OAAO,CAACC,GAAG,CAACX,QAAQ,CAAC;MACrBY,KAAK,CAAC,YAAYZ,QAAQ,CAACK,MAAM,mBAAmB,CAAC;MACrD,IAAI,CAACP,MAAM,CAACe,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;IACtC,CAAC,CACF;IACL;;;;;;;;;EASE;CACD;;AA3CclB,qBAAqB,GAAAmB,UAAA,EANjCtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EAEWtB,qBAAqB,CA2CnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}